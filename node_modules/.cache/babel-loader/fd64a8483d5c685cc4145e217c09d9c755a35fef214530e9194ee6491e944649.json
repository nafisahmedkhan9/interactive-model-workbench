{"ast":null,"code":"var _jsxFileName = \"/home/nafis/code/reactjs/interactive-model-workbench/src/components/SortableCell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableCell = ({\n  cell,\n  notebookId\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: cell.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(Cell, {\n      cell: cell,\n      notebookId: notebookId,\n      onEditingChange: setIsEditing,\n      dragHandleProps: {\n        attributes,\n        listeners\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(SortableCell, \"ul5RHJEgSYTMVBtBcAvFeZEZ+Sc=\", false, function () {\n  return [useSortable];\n});\n_c = SortableCell;\nexport default SortableCell;\nvar _c;\n$RefreshReg$(_c, \"SortableCell\");","map":{"version":3,"names":["React","useState","useSortable","CSS","Cell","jsxDEV","_jsxDEV","SortableCell","cell","notebookId","_s","isEditing","setIsEditing","attributes","listeners","setNodeRef","transform","transition","isDragging","id","style","Transform","toString","opacity","ref","className","children","onEditingChange","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nafis/code/reactjs/interactive-model-workbench/src/components/SortableCell.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Cell as CellType } from '../types';\nimport Cell from './Cell';\n\ninterface SortableCellProps {\n  cell: CellType;\n  notebookId: string;\n}\n\nconst SortableCell: React.FC<SortableCellProps> = ({ cell, notebookId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  \n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: cell.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className=\"\"\n    >\n      <Cell \n        cell={cell} \n        notebookId={notebookId} \n        onEditingChange={setIsEditing}\n        dragHandleProps={{ attributes, listeners }}\n      />\n    </div>\n  );\n};\n\nexport default SortableCell; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,GAAG,QAAQ,oBAAoB;AAExC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IACJY,UAAU;IACVC,SAAS;IACTC,UAAU;IACVC,SAAS;IACTC,UAAU;IACVC;EACF,CAAC,GAAGhB,WAAW,CAAC;IAAEiB,EAAE,EAAEX,IAAI,CAACW;EAAG,CAAC,CAAC;EAEhC,MAAMC,KAAK,GAAG;IACZJ,SAAS,EAAEb,GAAG,CAACkB,SAAS,CAACC,QAAQ,CAACN,SAAS,CAAC;IAC5CC,UAAU;IACVM,OAAO,EAAEL,UAAU,GAAG,GAAG,GAAG;EAC9B,CAAC;EAED,oBACEZ,OAAA;IACEkB,GAAG,EAAET,UAAW;IAChBK,KAAK,EAAEA,KAAM;IACbK,SAAS,EAAC,EAAE;IAAAC,QAAA,eAEZpB,OAAA,CAACF,IAAI;MACHI,IAAI,EAAEA,IAAK;MACXC,UAAU,EAAEA,UAAW;MACvBkB,eAAe,EAAEf,YAAa;MAC9BgB,eAAe,EAAE;QAAEf,UAAU;QAAEC;MAAU;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCIH,YAAyC;EAAA,QAUzCL,WAAW;AAAA;AAAA+B,EAAA,GAVX1B,YAAyC;AAkC/C,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}