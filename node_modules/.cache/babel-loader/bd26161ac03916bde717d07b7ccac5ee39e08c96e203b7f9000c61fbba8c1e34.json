{"ast":null,"code":"var _jsxFileName = \"/home/nafis/code/reactjs/interactive-model-workbench/src/components/SortableCell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableCell = ({\n  cell,\n  notebookId\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: cell.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1\n  };\n\n  // Custom event handlers that work with both drag-and-drop and button clicks\n  const handleMouseDown = e => {\n    // If clicking on a button, don't start drag\n    if (e.target instanceof HTMLButtonElement) {\n      return;\n    }\n    // Otherwise, let the drag listeners handle it\n    if (listeners !== null && listeners !== void 0 && listeners.onMouseDown) {\n      listeners.onMouseDown(e);\n    }\n  };\n  const handleTouchStart = e => {\n    // If touching a button, don't start drag\n    if (e.target instanceof HTMLButtonElement) {\n      return;\n    }\n    // Otherwise, let the drag listeners handle it\n    if (listeners !== null && listeners !== void 0 && listeners.onTouchStart) {\n      listeners.onTouchStart(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: isEditing ? \"\" : \"cursor-move\",\n    onMouseDown: e => {\n      var _e$target, _e$target2, _e$target3;\n      console.log('SortableCell mouse down, target:', e.target);\n      // If clicking on interactive elements, don't start drag\n      if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLInputElement || (_e$target = e.target) !== null && _e$target !== void 0 && _e$target.closest('button') || (_e$target2 = e.target) !== null && _e$target2 !== void 0 && _e$target2.closest('textarea') || (_e$target3 = e.target) !== null && _e$target3 !== void 0 && _e$target3.closest('input')) {\n        console.log('Interactive element clicked, preventing drag');\n        e.stopPropagation();\n        return;\n      }\n      console.log('Starting drag operation');\n    },\n    onClick: e => {\n      var _e$target4, _e$target5, _e$target6;\n      console.log('SortableCell clicked, target:', e.target);\n      // Prevent drag-and-drop from interfering with button clicks\n      if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLInputElement || (_e$target4 = e.target) !== null && _e$target4 !== void 0 && _e$target4.closest('button') || (_e$target5 = e.target) !== null && _e$target5 !== void 0 && _e$target5.closest('textarea') || (_e$target6 = e.target) !== null && _e$target6 !== void 0 && _e$target6.closest('input')) {\n        console.log('Interactive element clicked, stopping propagation');\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    },\n    onKeyDown: e => {\n      // Prevent drag-and-drop from interfering with keyboard events when editing\n      if (isEditing) {\n        e.stopPropagation();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Cell, {\n      cell: cell,\n      notebookId: notebookId,\n      onEditingChange: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SortableCell, \"ul5RHJEgSYTMVBtBcAvFeZEZ+Sc=\", false, function () {\n  return [useSortable];\n});\n_c = SortableCell;\nexport default SortableCell;\nvar _c;\n$RefreshReg$(_c, \"SortableCell\");","map":{"version":3,"names":["React","useState","useSortable","CSS","Cell","jsxDEV","_jsxDEV","SortableCell","cell","notebookId","_s","isEditing","setIsEditing","attributes","listeners","setNodeRef","transform","transition","isDragging","id","style","Transform","toString","opacity","handleMouseDown","e","target","HTMLButtonElement","onMouseDown","handleTouchStart","onTouchStart","ref","className","_e$target","_e$target2","_e$target3","console","log","HTMLTextAreaElement","HTMLInputElement","closest","stopPropagation","onClick","_e$target4","_e$target5","_e$target6","preventDefault","onKeyDown","children","onEditingChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nafis/code/reactjs/interactive-model-workbench/src/components/SortableCell.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Cell as CellType } from '../types';\nimport Cell from './Cell';\n\ninterface SortableCellProps {\n  cell: CellType;\n  notebookId: string;\n}\n\nconst SortableCell: React.FC<SortableCellProps> = ({ cell, notebookId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  \n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: cell.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  // Custom event handlers that work with both drag-and-drop and button clicks\n  const handleMouseDown = (e: React.MouseEvent) => {\n    // If clicking on a button, don't start drag\n    if (e.target instanceof HTMLButtonElement) {\n      return;\n    }\n    // Otherwise, let the drag listeners handle it\n    if (listeners?.onMouseDown) {\n      listeners.onMouseDown(e);\n    }\n  };\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    // If touching a button, don't start drag\n    if (e.target instanceof HTMLButtonElement) {\n      return;\n    }\n    // Otherwise, let the drag listeners handle it\n    if (listeners?.onTouchStart) {\n      listeners.onTouchStart(e);\n    }\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n      className={isEditing ? \"\" : \"cursor-move\"}\n      onMouseDown={(e) => {\n        console.log('SortableCell mouse down, target:', e.target);\n        // If clicking on interactive elements, don't start drag\n        if (e.target instanceof HTMLButtonElement || \n            e.target instanceof HTMLTextAreaElement || \n            e.target instanceof HTMLInputElement ||\n            (e.target as Element)?.closest('button') ||\n            (e.target as Element)?.closest('textarea') ||\n            (e.target as Element)?.closest('input')) {\n          console.log('Interactive element clicked, preventing drag');\n          e.stopPropagation();\n          return;\n        }\n        console.log('Starting drag operation');\n      }}\n      onClick={(e) => {\n        console.log('SortableCell clicked, target:', e.target);\n        // Prevent drag-and-drop from interfering with button clicks\n        if (e.target instanceof HTMLButtonElement || \n            e.target instanceof HTMLTextAreaElement || \n            e.target instanceof HTMLInputElement ||\n            (e.target as Element)?.closest('button') ||\n            (e.target as Element)?.closest('textarea') ||\n            (e.target as Element)?.closest('input')) {\n          console.log('Interactive element clicked, stopping propagation');\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }}\n      onKeyDown={(e) => {\n        // Prevent drag-and-drop from interfering with keyboard events when editing\n        if (isEditing) {\n          e.stopPropagation();\n        }\n      }}\n    >\n      <Cell \n        cell={cell} \n        notebookId={notebookId} \n        onEditingChange={setIsEditing}\n      />\n    </div>\n  );\n};\n\nexport default SortableCell; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}